language: c
sudo: false

addons:
  apt:
    sources:
    - kalakris-cmake
    packages:
    - cmake

env:
  global:
    - LUAROCKS=2.3.0
    # For LuaJIT 2.1, see https://github.com/LuaJIT/LuaJIT/commit/8961a92dd1607108760694af3486b4434602f8be
    - MACOSX_DEPLOYMENT_TARGET=10.12
  matrix:
    # - WITH_LUA_ENGINE=Lua LUA=lua5.3
    - WITH_LUA_ENGINE=LuaJIT LUA=luajit2.1

    # LuaRocks 3.1.3
    # - LUAROCKS=3.1.3 WITH_LUA_ENGINE=Lua LUA=lua5.3
    # - LUAROCKS=3.1.3 WITH_LUA_ENGINE=LuaJIT LUA=luajit2.1

os:
  - linux
  # - osx

script:
  - make && make test
  # Setup LuaRocks
  - source .ci/setenv_lua.sh
  # Test rock installation
  - luarocks make
  - test $PWD = `lua -e "print(require'luv'.cwd())"`
  - luarocks remove luv
  # Test the alternate rockspec
  - mkdir build/lib
  - cp build/deps/libuv/libuv_a.a build/lib/libuv.a
  - cp -a deps/libuv/include build
  - luarocks make rockspecs/$(ls rockspecs) LIBUV_DIR=build LUA_COMPAT53_INCDIR=deps/lua-compat-5.3/c-api
  - test $PWD = `lua -e "print(require'luv'.cwd())"`

jobs:
  fast_finish: true
  include:
    - stage: test
    - name: clang-asan
      os: linux
      compiler: clang
      env:
        - ASAN_OPTIONS="detect_leaks=1:check_initialization_order=1"
        - UBSAN_OPTIONS="print_stacktrace=1"
        - BUILD_TYPE=Debug
        - WITH_LUA_ENGINE=Lua
      script:
        - CMAKE_OPTIONS="-DCMAKE_C_FLAGS=-fsanitize=address,undefined" make && make test
        # Run with extremely aggressive garbage collection to potentially find more problems
        - ./build/lua -e "collectgarbage('setpause', 0); collectgarbage('setstepmul', 10000000000000)" tests/run.lua
    - name: valgrind
      os: linux
      # Need a more up-to-date Valgrind to dodge https://bugs.kde.org/show_bug.cgi?id=381289
      dist: bionic
      addons:
        apt:
          packages:
            - valgrind
      env:
        - BUILD_TYPE=Debug
        - WITH_LUA_ENGINE=Lua
      script:
        - make
        # --suppressions should be removed once
        # https://github.com/libuv/libuv/issues/2840
        # is closed and we update to the fixed libuv
        - valgrind --suppressions=.ci/libuv2840.supp --error-exitcode=1 --leak-check=full --child-silent-after-fork=yes ./build/lua -e "collectgarbage('setpause', 0); collectgarbage('setstepmul', 10000000000000)" tests/run.lua
    - name: process cleanup test
      os: linux
      env:
        - WITH_LUA_ENGINE=Lua
      script:
        - ./tests/test-sigchld-after-lua_close.sh

stages:
  - test

notifications:
  email: false
